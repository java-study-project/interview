一、如何自定义类加载器  
1、自定义的CLassLoader健承自java. Lang,CLassLoader  
2、如果不想打破双杂委派模型，那么只需要量写findCLass方法即可
3、如果想打破双杂委派模型，那么就重写整个LoadCLass方法
4、能讲出LoadCLass、findClass的核心实现逻辑

二、如何自定义异常  
1、异常整体继承体系Throwable顶展父类，它有两个子类分别是ErrorIExcepton
2、定义检查型异常和非检查型异常，非检查型异常做承RuntLimeExceptlon; Exceptio除了RuntimeException类及其子类的异常，均属于checked异常

三、Java锁Lock实现原理
1、内部继承AbstractQueuedSynchronlzer类
2、AQS维护了一个voLatile int state和一个FIFO螺程等待队列
3、AQS定义了两种资共享方式独占(ReentrantLock)\共(CountDownLatch)
4、核心实现通过CAS算法

四、红黑树的原理
1、基本特征从个节点到该节点的子孙节点的所有路径上包合相同数目的黑节点，如果一则它的子节点必须是黑色的，根节点是黑色，如果一个节点是红的，那么它的两个儿子都是用
2、红黑树的时间复杂度0(Lgn)
3、java中的TreeSet、TreeHap邮是过杠黑树实现
4、红黑树的基本操作左旋和右旋

五、如何做好缓存设计
1、考虑更新策略、成本和收益、缓存穿通、缓存雷崩、缓存击穿
2、能列举出常用的缓存框架及比较

六、设计一套单日1TB的分布式实时日志采集系统?
考察点:
1、日志采集是所有高稳定性、高井发系统不可或缺的一部分，考察面试者的原有行业背景及对  
2、考察面试者的技术广度，对新技术的获取及应用能力
设计者必须考虑到的3,4个核心点
日志采集策略，第三方框架支撑Logstash,fluentd,Logtadl, flLume;或自己提供独立的设  
日志排队缓存策略，第三方框架支撑kafka;或自 己提供独立的设计思路  
日志实时计算策略，第三方框架支撑storm spark FlLink; 或自己提供独立的设计思路  
日志存储策略，第三方框架支撑hdfs、hbase、NoSQL数据库

1.事务隔高级别有哪几个?隔离级别主要用。事务隔离级别有哪几个2隔高级别主要用来解决什么问题?
读未提交:一个事务可以读取其它事务未提交的变更数据，脏读、幻读、不可重复读都解决不了。
读已提交:一个事务可以读取其它事务已提交的变更数据，可以防止脏读
可重复读:一个事务可以读取了数据后，对数据加锁，其它事务无法修改被锁的数据，可以解决脏
串行化:不管多少事务，挨个运行完一个事务的所有子事务之后才可以执行另外个事务里面的所有子事务， 这样就解决了脏读、不可重复读和幻读的问题了。
脏读:主要指读取到了已回滚的数据
不可重复读:一个事务两次读取同一行数据，读取到的结果列的值不一致
幻读:一个事务两次执行同个查询语句，返回的记录行数不致

2. volatile关键字的作用是什么?
保证在多线程环境下的变的可见性和部分有序性，它会保证修改的值会立即被
更新到主存，当有其他线程需读取时，它会去内存中读取新值。
观察加入volatile关键字和没有加入voLatile关键字时所生成的汇编代
码发现，加入voLatile关键字时，
会多出一个Lock前经指令Lock前缘指令实际上相当于一个内存屏障 (
也成内存棚栏) ,内存屏网会提供3个功能:
1)它确保指令重排序时不会把其后面的指令排到内存屏障之前的位置，
也不会把前面的指令排到内存屏障的后面:即在执行到内存屏网这句指令时，在它前面的操作已经全2)它会强制将对存的修改操作立即写入主存;
3)如果是写操作，它会导致其他CPU中对应的缓存行无效。

3. java proxy和CGLIB有什么不同? CGLIB具体实现原理是什么?
java proxy: 可以对接口做代理实现，不支持直接对类的代理
CGL IB:可以支持对接口和类的代理
CGLIB主使用字节码织入的技术手段，动态生成一个子类，子类的方法会
线调用拦毅的代码，在调用原有代码逻辑，实例对速过这个子类来创建

4.AtomicInteger. AtomicBooLean的原理是什么?
主要使用了CAS原理，实现了不阻锁，主要利用硬件展面的指令，看汇编指令可以到使用了Lock前缓+cmpxchg
Lock前缀:主要用于多处理器的环境，会锁住内存操作的总线，并将结果
马上写回主内存，保证操作的可见性和有序性
cmpxchg:比较井交换指令。保证操作的原子性

5.使用NI0方式的网络模型，一般会有多少个线程?
监听线程:一般一个线程用来做accept
工作线程:一般cpu核数*2
1+Cpu核数*2

6.请使用策略模式对以下代码做优化

7.写代码实现以下业务场景:
“小明和小张去中介找房子，小明要3室2厅的房子但租金不要超过6000,小李的要求是租金不超过1500的都能接受。中介说没问题，你们留个电话，有房子我通知你们”
考察点:
1、面向对象建模
2、观察者或者Callback模式  
3.策略模式

elk
elasticsearch搜索引擎原理和使用